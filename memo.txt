時間割を作成する時間がもったいない

github pagesに載せるwebアプリケーション(JavaScript)
どの学校でも使用できるようにするのが目的

入力項目
 最初の入力
    曜日ごとの科目数(月,火,水,木,金)←クラスごとに時間が違う場合処理できない→クラスごとに設定する(一括で設定できるようにも)
    教師数
    教師名
    教師ごとの担当数//追記
    クラス数(もしくは講義場所)
    クラス名
 次の入力
    教師の担当クラス(checkBox)←却下
    教師の担当クラスごとの授業数(int)←これで担当クラスも賄える(0のクラスは担当ではない)
    入れる時間が決まっている教師の時間
	(例)教師名,クラス,曜日,時間数,時間(表にクリックすると見やすい?)
	(＋をclickすると新たに同じ形式の枠が表示される)
	(曜日ごとの科目数を基に表を作成)
  開始
データ
  教師の合計授業時間(入力項目(教師の担当クラスごとの授業数(int))の合計)

  class Class{
      /teacherInCharge:map;←却下
    name:string;←add
    timeSlot:連想配列;
  }
  classArr(Class classの配列)
  /teacherInCharge(クラスの担当教員連想配列)(教師名:授業数)←却下
  timeslot(teacherName)(0,0=月,1限)
  
  class Teacher{
      /classInCharge:map;←却下
    name:string;←add
    timeSlot:連想配列;
  }
　teacherArr(teacher classの配列)
  /classInCharge(教師の担当クラス連想配列)(クラス名:授業数)(例:[ct1b,2],[ct2b,2],[ct3b,3])
  timeSlot(className)(0,0=月,1限)
  
  ↓timeslotについて
  teacherclass,classclassにて同じ内容のデータが存在し、
  データの冗長性やデータの整合性の問題を引き起こす可能性あり
  ↓
  教師とクラスの組み合わせをclassにまとめればOK?
  class TeacherClass{
    constructor(teacherName,className,timeSlot){
      this.teacherName = teacherName;
      this.className = className;
      this.timeSlot = timeSlot;
    }
  }
  ↑却下


教師の担当クラス数の降順で時間を決めていく(てことは連想配列じゃ降順めんどくさい？)
↓
教師の合計授業時間の降順で時間を決めていく
for(let i=0; i<teacherArr.length; i++){
  for(classInChargeの要素分ループ){
    while(teacherArr[i].){
      時間が決まったら、クラス、教師の配列の該当場所をfalseに変更
    }
  }
}

↓新しく教師の担当クラス数だけの変数を追加する
let 
for(let i=0;i<teacherArr.length;i++){
  ここで担当数の降順で並び替え
}
